name: CI/CD Pipeline (MVP)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

# Define environment variables
env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'
  FRONTEND_DIR: 'frontend'
  BACKEND_DIR: 'backend'

jobs:
  frontend-checks:
    name: Frontend Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for git info
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: '${{ env.FRONTEND_DIR }}/package-lock.json'
    
    - name: Install Dependencies
      working-directory: ${{ env.FRONTEND_DIR }}
      run: npm ci
    
    - name: Type Check
      working-directory: ${{ env.FRONTEND_DIR }}
      run: npm run type-check
    
    - name: Lint
      working-directory: ${{ env.FRONTEND_DIR }}
      run: npm run lint
    
    - name: Run Tests
      working-directory: ${{ env.FRONTEND_DIR }}
      run: npm run test -- --coverage
    
    - name: Build
      working-directory: ${{ env.FRONTEND_DIR }}
      env:
        VITE_APP_ENV: development
      run: npm run build

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: ${{ env.FRONTEND_DIR }}/dist
        retention-days: 7

  backend-checks:
    name: Backend Checks
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: '${{ env.BACKEND_DIR }}/requirements.txt'
    
    - name: Install Dependencies
      working-directory: ${{ env.BACKEND_DIR }}
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pylint black mypy
    
    - name: Run Linting
      working-directory: ${{ env.BACKEND_DIR }}
      run: |
        black . --check
        pylint **/*.py
    
    - name: Type Check
      working-directory: ${{ env.BACKEND_DIR }}
      run: mypy .
    
    - name: Run Tests with Coverage
      working-directory: ${{ env.BACKEND_DIR }}
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      run: |
        pytest --cov=. --cov-report=xml
    
    - name: Upload Coverage Report
      uses: codecov/codecov-action@v3
      with:
        files: ${{ env.BACKEND_DIR }}/coverage.xml

  # Deployment jobs removed for MVP phase
  # They will be added back when ready for staging/production
